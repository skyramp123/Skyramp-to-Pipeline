# Generated by Skyramp v1.2.21 on 2025-09-18 23:07:10.464504 -0400 EDT m=+26612.651065460
# Command: skyramp generate ui rest \
# 		--framework pytest \
# 		--language python \
# 		--output ui-demo-python.py \
# 		--output-dir /Users/nkumar0101/Desktop/testing \
# 		--overwrite true \
# 		--playwright-trace /Users/nkumar0101/Desktop/testing/demo.zip \
# 		--rawTrace true \

# Import of required libraries
import skyramp
import os
import time
import pytest
import re
from playwright.sync_api import Page, expect


@pytest.fixture(scope="session")
def browser_context_args(browser_context_args, playwright):
    return {"ignore_https_errors": True, "service_workers": "block"}


def test_ui(page: Page):
    page.goto("https://demoshop.skyramp.dev/products")
    # Javascript download detected. Wait until potential hydration is completed
    page.wait_for_timeout(1500)
    page.get_by_role("button", name="Add Product").click()
    page.get_by_test_id("new_product_name").click()
    playwright_request_0 = {
        "category": "Devices",
        "description": "Skyramp Ipad",
        "image_url": "images.google.com",
        "name": "Skypad",
        "price": 150
    }

    page.get_by_test_id("new_product_name").fill(skyramp.get_value(playwright_request_0, "name"))
    page.get_by_test_id("new_product_description").click()
    page.get_by_test_id("new_product_description").fill(skyramp.get_value(playwright_request_0, "description"))
    page.get_by_test_id("new_product_image_url").click()
    page.get_by_test_id("new_product_image_url").fill(skyramp.get_value(playwright_request_0, "image_url"))
    page.get_by_test_id("new_product_category").click()
    page.get_by_test_id("new_product_category").fill(skyramp.get_value(playwright_request_0, "category"))
    page.get_by_role("combobox").click()
    page.get_by_test_id("new_product_instock_yes").click()
    page.get_by_test_id("new_product_price").click()
    page.get_by_test_id("new_product_price").fill(str(skyramp.get_value(playwright_request_0, "price")))
    # Wait to finish any potential hydration
    page.wait_for_timeout(1500)
    with page.expect_response("**/api/v1/products**") as resp:
        page.get_by_role("button", name="Submit").click()

    page.get_by_role("button", name="Edit Product").click()
    page.get_by_test_id("product-detail-input-price").click()
    playwright_request_1 = {"price": 200}

    page.get_by_test_id("product-detail-input-price").fill(str(skyramp.get_value(playwright_request_1, "price")))
    # Wait to finish any potential hydration
    page.wait_for_timeout(1500)
    with page.expect_response("**/api/v1/products/**") as resp:
        page.get_by_role("button", name="Save Product").click()

    # Wait to finish any potential hydration
    page.wait_for_timeout(1500)
    with page.expect_response("**/api/v1/products/**") as resp:
        page.get_by_role("button", name="Delete Product").click()
