name: Skyramp Python UI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  python-ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (user)
        run: |
          python -m pip install --upgrade pip
          pip3 install --user skyramp pytest-playwright pytest
          python -m playwright install --with-deps chromium

      - name: Add local bin to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Resolve skyramp CLI
        shell: bash
        run: |
          set -euo pipefail
          echo "PATH: $PATH"
          which -a skyramp || true
          ls -la "$HOME/.local/bin" || true

          SKYRAMP_BIN="$(command -v skyramp || true)"
          if [[ -z "${SKYRAMP_BIN}" && -x "$HOME/.local/bin/skyramp" ]]; then
            SKYRAMP_BIN="$HOME/.local/bin/skyramp"
          fi
          if [[ -z "${SKYRAMP_BIN}" && -x "/usr/local/bin/skyramp" ]]; then
            SKYRAMP_BIN="/usr/local/bin/skyramp"
          fi
          if [[ -z "${SKYRAMP_BIN}" ]]; then
            echo "skyramp CLI not found. Is it installed?"; python3 -m pip show skyramp || true
            exit 127
          fi
          echo "Using skyramp at: $SKYRAMP_BIN"
          echo "SKYRAMP_BIN=$SKYRAMP_BIN" >> "$GITHUB_ENV"

      - name: Generate & run per zip
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          zips=(tests/*.zip)

          if (( ${#zips[@]} == 0 )); then
            echo "No zip traces found â€” skipping run."
            exit 0
          fi

          for z in "${zips[@]}"; do
            echo "::group::Generate from $z"
            marker="$(date +%s)"
            "$SKYRAMP_BIN" generate ui rest \
              --language python \
              --framework pytest \
              --playwright-trace "$z"
            echo "::endgroup::"

            echo "::group::Run newly generated tests for $z"
            mapfile -t new_tests < <(find . -type f -name "*.py" -newermt "@$marker")
            if (( ${#new_tests[@]} )); then
              printf 'Detected new Python tests:\n%s\n' "${new_tests[@]}"
              python3 -m pytest "${new_tests[@]}" --browser chromium -q
            else
              echo "No new Python test files detected for $z"
            fi
            echo "::endgroup::"
          done
